name: Build, Test, and Deploy


on: [push, workflow_dispatch]

jobs:
  build:
    name: Bygg og push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - name: Push Docker image to GAR
        id: docker-build-push
        uses: nais/docker-build-push@v0
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
        with:
          team: toi
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          build_secrets: 'NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}'
      - name: Set Image Output
        id: set-image-output
        run: echo "image=${{ steps.docker-build-push.outputs.image }}" >> $GITHUB_ENV

  test:
          name: Playwright image test
          needs: build
          permissions:
            contents: write # to write sarif
          runs-on: ubuntu-latest
          steps:
            - name: Pull Docker image from build
              run: docker pull ${{ needs.build.outputs.image }}
      
            # Start the application using the Docker image
            - name: Start Application in Docker
              run: docker run -d -p 8080:8080 ${{ needs.build.outputs.image }}
      
            # Run Playwright tests using the built Docker image
            - name: Run Playwright Tests in Docker
              run: |
                docker exec $(docker ps -q -f ancestor=${{ needs.build.outputs.image }}) npx playwright test
            
            # Upload Playwright reports as artifacts in case of failure
            - uses: actions/upload-artifact@v4
              if: failure()
              with:
                name: playwright-report
                path: playwright-report/
                retention-days: 30
      
            # Deploy Playwright report to GitHub Pages
            - name: Deploy to GitHub Pages
              uses: peaceiris/actions-gh-pages@v3
              with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
                publish_dir: ./playwright-report
                publish_branch: gh-pages  # the target branch
                keep_files: true

  trivy:
    runs-on: ubuntu-latest
    name: Trivy vulnerability scanner
    needs: build
    permissions:
      contents: write # to write sarif
      security-events: write # push sarif to github security
      id-token: write # for nais/login
      actions: read # for private repositories
    steps:
      - uses: actions/checkout@v4
      - uses: nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: toi

      - name: Pull docker image
        run: docker pull ${{ needs.build.outputs.image }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ needs.build.outputs.image }}'
          format: 'sarif'
          output: 'trivy.sarif'
          severity: 'HIGH,CRITICAL'
          limit-severities-for-sarif: true

      - name: Upload results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy.sarif'

  deploy:
    name: Deploy til dev-gcp
    runs-on: ubuntu-latest
    needs: 
      - test 
      - trivy
      - build
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to NAIS
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-dev.yaml
          VARS: .nais/dev-gcp.json
          VAR: image=${{ needs.build.outputs.image }}
